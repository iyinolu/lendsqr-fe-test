{"version":3,"file":"static/js/652.2f83249d.chunk.js","mappings":"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","sources":["services/userService.js","constants/endpoints.js","components/infographics/infoCard.js","assets/icons/filter.js","components/table/BaseTable.js","views/users/utils/_usersInfo.js","assets/icons/infographics.js","assets/icons/verticalEllipsis.js","assets/icons/eye.js","assets/icons/blacklist-user.js","assets/icons/activateUser.js","views/users/utils/_tablestructure.js","views/users/index.js","hooks/useAllUserData.js","hooks/usePaginateData.js","../node_modules/object-path/index.js"],"sourcesContent":["import axios from 'axios'\nimport { allUsers, userByID } from 'src/constants/endpoints'\n\nexport const getUser = () => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(allUsers())\n      .then((res) => {\n        resolve({ status: 'success', data: res.data })\n      })\n      .catch((err) => {\n        reject({ status: err.response?.status, message: err.response?.statusText })\n      })\n  })\n}\n\nexport const getUserById = (id) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(userByID(id))\n      .then((res) => {\n        resolve({ status: 'success', data: res.data })\n      })\n      .catch((err) => {\n        reject({ status: err.response?.status, message: err.response?.statusText })\n      })\n  })\n}\n","export const allUsers = () => `https://6270020422c706a0ae70b72c.mockapi.io/lendsqr/api/v1/users`\nexport const userByID = (id) =>\n  `https://6270020422c706a0ae70b72c.mockapi.io/lendsqr/api/v1/users/${id}`\n","import React from 'react'\nimport { CCard, CCardBody, CCardSubtitle, CCardTitle } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport PropTypes from 'prop-types'\n\nexport const InfoCard = ({ icon, title, subtitle }) => {\n  return (\n    <div className=\"info-card\">\n      <CCard>\n        <CCardBody>\n          <div className=\"info-card-header\">\n            <span className=\"users-icon\">\n              <CIcon icon={icon} />\n            </span>\n          </div>\n          <CCardSubtitle className=\"mb-2 text-medium-emphasis\">{title}</CCardSubtitle>\n          <CCardTitle>{subtitle}</CCardTitle>\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nInfoCard.propTypes = {\n  icon: PropTypes.any,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n}\n\nexport default InfoCard\n","export const filterIcon = [\n  `<svg viewBox=\"0 0 16 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M6.22222 11.3333H9.77778V9.55554H6.22222V11.3333ZM0 0.666656V2.44443H16V0.666656H0ZM2.66667 6.88888H13.3333V5.1111H2.66667V6.88888Z\" fill=\"#545F7D\"/>\n    </svg>\n    `,\n]\n","import React from 'react'\nimport { CCard } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { filterIcon } from 'src/assets/icons/filter'\nimport PropTypes from 'prop-types'\nimport objectPath from 'object-path'\n\nconst TablePaginationGroup = React.lazy(() => import('../pagination'))\n\nexport const BaseTable = ({ structure, data, page, setPage }) => {\n  const renderCell = (row, col, idx) => {\n    switch (col.type) {\n      case 'text':\n        let value = '-'\n        if (col.path) {\n          value = objectPath.get(row, col.path)\n        } else if (col.renderer) {\n          value = col.renderer(row)\n        } else if (col.default) {\n          value = col.default\n        }\n\n        return (\n          <td className={assignTableCellClass(col)} key={idx}>\n            {value}\n          </td>\n        )\n      case 'action':\n        return col.renderAction(row)\n      case 'badge':\n        return (\n          <td className={assignTableCellClass(col)} key={idx}>\n            {col.renderer(row)}\n          </td>\n        )\n      default:\n        return <></>\n    }\n  }\n\n  const assignTableCellClass = (cellInfo) => {\n    switch (cellInfo?.screen) {\n      case 'md':\n        return 'md-table-fields'\n      case 'md-sm':\n        return 'sm-md-table-fields'\n      default:\n        return ''\n    }\n  }\n\n  return (\n    <>\n      <CCard>\n        <table>\n          <thead>\n            <tr>\n              {structure.map((item, idx) => {\n                return (\n                  <th key={idx} scope=\"col\" className={assignTableCellClass(item)}>\n                    <div className=\"users-table-header\">\n                      <span>{item.columnName}</span>\n                      {item.hasFilter && (\n                        <span role=\"button\" className=\"filter-btn\">\n                          <CIcon icon={filterIcon} />\n                        </span>\n                      )}\n                    </div>\n                  </th>\n                )\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {data.map((row, idx) => {\n              return (\n                <tr key={idx}>{structure.map((col, colIdx) => renderCell(row, col, colIdx))}</tr>\n              )\n            })}\n            <tr></tr>\n          </tbody>\n        </table>\n      </CCard>\n      <TablePaginationGroup\n        currentPage={page}\n        onPageChange={(pageValue) => {\n          setPage(pageValue)\n        }}\n        pageSize={10}\n        totalCount={100}\n      />\n    </>\n  )\n}\n\nBaseTable.propTypes = {\n  structure: PropTypes.arrayOf(PropTypes.any).isRequired,\n  data: PropTypes.arrayOf(PropTypes.any),\n  page: PropTypes.number,\n  setPage: PropTypes.func,\n}\n","import { users, activeUsers, usersWithLoan, usersWithSavings } from 'src/assets/icons/infographics'\n\nexport const usersInfo = [\n  {\n    title: 'USERS',\n    subtitle: '2,453',\n    icon: users,\n  },\n  {\n    title: 'ACTIVE USERS',\n    subtitle: '2,453',\n    icon: activeUsers,\n  },\n  {\n    title: 'USERS WITH LOANS',\n    subtitle: '12,453',\n    icon: usersWithLoan,\n  },\n  {\n    title: 'USERS WITH SAVINGS',\n    subtitle: '102,453',\n    icon: usersWithSavings,\n  },\n]\n","export const users = [\n  `<svg viewBox=\"0 0 22 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M10.781 10.9717L10.8296 11.0592C10.8284 11.0598 10.8271 11.0605 10.8258 11.0611L10.781 10.9717ZM10.781 10.9717C10.8109 10.9567 10.8409 10.942 10.8708 10.9274L10.8684 10.9231L10.781 10.9717ZM19.2883 10.4376C19.2882 10.4375 19.288 10.4374 19.2878 10.4374C18.6975 10.1973 18.2367 10.0011 17.9164 9.73342C17.6118 9.47893 17.4327 9.15794 17.4085 8.6562C17.6452 8.35313 17.7987 7.97712 17.8979 7.64315C17.9959 7.31349 18.0428 7.01819 18.0634 6.86117C18.456 6.2465 18.6136 5.6202 18.5474 5.18821C18.8776 4.39116 18.6459 3.74348 18.4262 3.23022C18.2439 2.79194 18.1122 2.42115 18.281 1.94649L18.3907 1.65426L18.4211 1.57334L18.3454 1.53157L18.0154 1.34938L18.0155 1.34919L18.0095 1.34639C16.8166 0.787077 15.4666 0.70846 14.4812 1.12481L14.4812 1.12474L14.4776 1.12644C13.8424 1.42519 13.3486 1.91218 13.1147 2.58762C12.7368 2.90253 12.561 3.36163 12.5006 3.82113C12.4404 4.27953 12.4933 4.7492 12.5841 5.105C12.4781 5.5783 12.6743 6.21148 13.0677 6.826C13.0883 6.98263 13.1353 7.27789 13.2332 7.60758C13.3322 7.94109 13.4854 8.31662 13.7214 8.61945C13.6804 9.12247 13.5006 9.44423 13.2004 9.69863C12.8848 9.96607 12.4331 10.1623 11.8433 10.4021L11.8274 10.4085C11.4664 10.5531 11.102 10.699 10.7362 10.8823L10.6429 10.9291L10.6936 11.0203L11.0606 11.6803L11.1091 11.7676L11.1965 11.7192C11.4107 11.6004 11.6201 11.5151 11.8356 11.4273C11.947 11.3819 12.0601 11.3358 12.1764 11.2841C12.7414 11.0654 13.3624 10.8217 13.84 10.4056C14.3246 9.98346 14.658 9.38776 14.658 8.47869V8.33173V8.29031L14.6287 8.26102L14.5187 8.15102C14.3349 7.96723 14.2033 7.67476 14.1178 7.38242C14.0328 7.09151 13.998 6.81684 13.998 6.68174V6.57173V6.54788L13.9872 6.52659L13.9502 6.45355L13.9509 6.45322L13.9442 6.44322C13.7291 6.12054 13.6146 5.85478 13.5582 5.65967C13.53 5.56202 13.5165 5.48287 13.512 5.4237C13.5079 5.3698 13.5116 5.33824 13.5146 5.32518L13.5836 5.18625L13.6001 5.15317L13.591 5.11735L13.5541 4.97039L13.5544 4.97033L13.552 4.9632C13.4651 4.70201 13.4207 4.3406 13.4559 4.00622C13.4915 3.66817 13.605 3.38458 13.8063 3.24447L13.9155 3.172L13.9477 3.1506L13.9571 3.11308L13.9937 2.96773C14.1332 2.48177 14.4071 2.14055 14.8896 1.93365L14.8896 1.93371L14.8929 1.93212C15.5388 1.62633 16.4283 1.64712 17.2689 1.97766C17.1824 2.59108 17.367 3.06781 17.5438 3.4909C17.556 3.52513 17.5682 3.55866 17.58 3.59158C17.7491 4.05943 17.8735 4.40387 17.622 4.87462L17.6214 4.87432L17.6173 4.88468L17.5442 5.06773L17.5277 5.10926L17.5476 5.14931L17.6186 5.29222C17.619 5.29411 17.6197 5.29839 17.6203 5.30577C17.6215 5.32076 17.6217 5.34271 17.6197 5.37184C17.6156 5.42988 17.6031 5.51079 17.5769 5.6114C17.5246 5.81183 17.4189 6.08629 17.2231 6.40748L17.1506 6.51365L17.1332 6.53916V6.57003V6.67374C17.1146 6.82135 17.0784 7.09568 16.9991 7.3821C16.9179 7.67552 16.7953 7.96656 16.6125 8.14932L16.5025 8.25932L16.4732 8.28861V8.33003V8.47698C16.4732 9.38606 16.8066 9.98176 17.2912 10.4039C17.7694 10.8206 18.3915 11.0644 18.9571 11.2833C19.5286 11.5045 20.0443 11.71 20.4374 12.0368C20.8039 12.3416 21.0672 12.7552 21.1539 13.4H14.6671H14.5671V13.5V14.2331V14.3331H14.6671H22.0002H22.1002V14.2331V13.8661C22.1002 12.7212 21.7043 11.9794 21.1467 11.4649C20.5951 10.9558 19.8907 10.675 19.2883 10.4376Z\" fill=\"#DF18FF\" stroke=\"#DF18FF\" stroke-width=\"0.2\"/>\n  <path d=\"M11.528 8.20785C11.2099 8.00595 11.0004 7.64812 10.8478 7.1812C10.695 6.71363 10.6045 6.15366 10.5127 5.56543L10.5126 5.56442C10.5081 5.53789 10.5037 5.51124 10.4993 5.48447C10.3571 4.62867 10.1955 3.65602 9.75846 2.89124C9.53166 2.49434 9.22924 2.15024 8.81487 1.90596C8.40045 1.66164 7.88033 1.52085 7.22392 1.52085C6.14637 1.52085 5.53815 2.03195 5.22969 2.33764C4.2622 2.58717 3.75817 3.12827 3.49682 3.77942C3.24049 4.41807 3.21981 5.1586 3.20167 5.80797L3.20094 5.83421C3.20094 5.83435 3.20093 5.83448 3.20093 5.83461C3.18236 6.35064 3.16407 6.83441 3.06168 7.24854C2.96036 7.65836 2.77924 7.98887 2.44231 8.20904L2.11541 8.39037L2.02052 8.443L2.08071 8.53328L2.3007 8.86326C2.81691 9.63803 3.96456 10.3622 5.15284 10.7086C4.74433 11.862 3.75589 12.2426 2.68054 12.6366C2.04186 12.855 1.34551 13.0982 0.811165 13.5472C0.269578 14.0023 -0.1 14.6633 -0.1 15.7V16.0669V16.1669H0H13.933H14.033V16.0669V15.7C14.033 14.6633 13.6635 14.0025 13.127 13.5474C12.5975 13.0982 11.9104 12.8547 11.2909 12.6359C11.2749 12.63 11.2589 12.6242 11.243 12.6183C10.1834 12.2304 9.21975 11.8775 8.81722 10.708C10.0058 10.3617 11.153 9.63731 11.6701 8.86245L11.6702 8.8624L11.8902 8.5324L11.9504 8.44212L11.8555 8.38949L11.528 8.20785ZM12.4139 14.1714C12.7533 14.4178 12.993 14.74 13.0804 15.233H0.885611C0.972968 14.723 1.21322 14.4009 1.55226 14.1586C1.89855 13.9112 2.34679 13.7471 2.85636 13.5606C2.8931 13.5472 2.93015 13.5336 2.96751 13.5199L2.96788 13.5198C2.98244 13.5144 2.99702 13.509 3.01163 13.5035C3.63804 13.2708 4.31282 13.0201 4.88621 12.5843C5.47744 12.135 5.95844 11.4914 6.1837 10.4777L6.18372 10.4778L6.18415 10.4756L6.2572 10.1086L6.27672 10.0105L6.17865 9.99102L5.81169 9.91797L5.81169 9.91796L5.81035 9.91771C4.87991 9.74568 3.88295 9.20815 3.33135 8.66185C3.6876 8.30647 3.87773 7.86429 3.9834 7.39758C4.09456 6.90658 4.1137 6.38085 4.13149 5.89253L4.1321 5.87577H4.13211L4.13214 5.87459C4.1507 5.11934 4.1882 4.52532 4.38069 4.08331C4.47559 3.86541 4.60773 3.68607 4.79419 3.54352C4.98132 3.40045 5.22786 3.29085 5.55633 3.21987L5.55646 3.22048L5.56705 3.21692L5.67705 3.17997L5.69931 3.17249L5.71592 3.15589L5.78896 3.08284L5.78946 3.08234C6.04114 2.83066 6.41967 2.45213 7.22129 2.45213C7.65914 2.45213 7.99995 2.52809 8.27152 2.66846C8.54227 2.8084 8.75076 3.01572 8.91924 3.2893C9.26016 3.84286 9.43195 4.65661 9.6157 5.70562C9.70696 6.27246 9.79964 6.84743 9.95778 7.36815C10.106 7.85628 10.3138 8.30419 10.6385 8.65853C10.0876 9.20587 9.0885 9.7445 8.15607 9.91773L8.15606 9.91772L8.15481 9.91797L7.78785 9.99102L7.68977 10.0105L7.7093 10.1086L7.78234 10.4756L7.78243 10.476C7.98903 11.491 8.47062 12.1351 9.06674 12.5845C9.63655 13.0141 10.3094 13.2639 10.9286 13.4938C10.952 13.5025 10.9754 13.5111 10.9986 13.5198L10.9991 13.5199L11.0071 13.5229C11.5578 13.7247 12.0443 13.9029 12.4139 14.1714Z\" fill=\"#DF18FF\" stroke=\"#DF18FF\" stroke-width=\"0.2\"/>\n  </svg>\n  `,\n]\n\nexport const activeUsers = [\n  `<svg viewBox=\"0 0 22 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M4.40876 17.7755L4.40878 17.7753C4.2427 17.7637 4.10507 17.6935 4.01017 17.5773C3.93547 17.4858 3.89111 17.3707 3.87616 17.243H3.86763V17.143C3.86763 15.8381 4.2137 14.6162 4.81335 13.5614H1.43539C1.26471 13.5614 1.11848 13.4984 1.01507 13.3838C0.912837 13.2704 0.85955 13.1146 0.856345 12.9395M4.40876 17.7755L0.956323 12.9373M4.40876 17.7755H4.41574L17.5545 17.7784C17.8752 17.7784 18.1335 17.5188 18.1335 17.1993C18.1335 15.9325 17.7596 14.6106 17.1652 13.5615L20.5639 13.5606C20.8846 13.5606 21.143 13.301 21.143 12.9815L21.143 12.9803C21.1124 10.5787 19.7611 8.54781 17.642 7.67851C18.786 6.95121 19.5184 5.67431 19.5184 4.25897C19.5184 0.796036 15.468 -1.03867 12.9041 1.20528C11.6926 0.706119 10.3069 0.706116 9.09542 1.20528C8.3769 0.576855 7.45379 0.222467 6.48189 0.222467C2.45243 0.222467 0.995241 5.57355 4.35675 7.68005M4.40876 17.7755L4.58344 7.69863C4.54585 7.67739 4.50882 7.65576 4.47235 7.63375C4.43362 7.64875 4.39508 7.66418 4.35675 7.68005M0.856345 12.9395C0.856343 12.9394 0.856341 12.9393 0.856339 12.9391L0.956323 12.9373M0.856345 12.9395C0.856348 12.9396 0.856351 12.9397 0.856353 12.9398L0.956323 12.9373M0.856345 12.9395C0.80084 10.6744 2.27898 8.54032 4.35675 7.68005M0.956323 12.9373C0.901131 10.691 2.38568 8.57118 4.46325 7.74475C4.42723 7.72354 4.39173 7.70197 4.35675 7.68005M4.98763 13.4614H4.87125L4.92864 13.5614C4.94804 13.5279 4.96771 13.4946 4.98763 13.4614ZM17.5289 2.2208L17.529 2.22083C19.2108 3.91955 18.1948 6.83041 15.877 7.11796C16.3723 5.11422 15.6089 3.03533 13.9941 1.82705C15.1109 1.10957 16.5822 1.26358 17.5289 2.2208ZM6.12476 7.11767C4.71237 6.93785 3.64026 5.71877 3.64026 4.2608C3.64026 1.96075 6.14996 0.626447 8.00796 1.82696C6.39303 3.03507 5.62969 5.11381 6.12476 7.11767ZM14.4988 7.53981C13.1179 10.541 8.88191 10.5437 7.5011 7.53984C6.27849 4.87709 8.2423 1.98948 10.989 1.98904C13.9024 2.02526 15.6822 4.96715 14.4988 7.53981ZM6.6465 8.41985C7.11463 9.23527 7.80133 9.91068 8.63053 10.3566C7.46485 10.7713 6.43557 11.482 5.63465 12.4042L2.0459 12.4043C2.31215 10.0953 4.28099 8.34345 6.6465 8.41985ZM16.3445 12.4042C15.5465 11.4875 14.5226 10.7755 13.3622 10.3621C14.1946 9.91413 14.8858 9.2383 15.356 8.4198C17.7215 8.34338 19.6905 10.0943 19.9566 12.4042H16.3445ZM5.04793 16.6202C5.16912 15.1942 5.80652 13.8488 6.77177 12.8727C10.381 9.22483 16.5119 11.5852 16.9316 16.6202H5.04793Z\" fill=\"#5718FF\" stroke=\"#5718FF\" stroke-width=\"0.2\"/>\n      <path d=\"M13.275 7.32655C13.3596 7.16256 13.3631 7.00063 13.3085 6.86202C13.2548 6.72582 13.1481 6.61917 13.0233 6.55498C12.8985 6.49079 12.7495 6.46592 12.6073 6.50127C12.4625 6.53724 12.3322 6.63383 12.2471 6.79774L12.2395 6.81235C11.7073 7.81758 10.2757 7.81072 9.75087 6.79791C9.6665 6.6342 9.53676 6.53764 9.39242 6.50168C9.25055 6.46634 9.10191 6.49121 8.97735 6.55535C8.8528 6.61949 8.7462 6.72605 8.69256 6.86213C8.63799 7.00061 8.64128 7.16245 8.72562 7.32643L8.72568 7.32656C9.68163 9.17902 12.3199 9.17911 13.275 7.32655ZM13.275 7.32655L13.1864 7.28085L13.275 7.32652C13.275 7.32653 13.275 7.32654 13.275 7.32655ZM13.1861 7.2807C12.2683 9.06102 9.73326 9.06102 8.81455 7.2807L12.3358 6.74383H12.3359H12.4019C12.7353 6.3458 13.4544 6.7607 13.1861 7.2807Z\" fill=\"#5718FF\" stroke=\"#5718FF\" stroke-width=\"0.2\"/>\n      </svg>\n      `,\n]\n\nexport const usersWithLoan = [\n  `<svg viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M0.96167 0.400011V16.4118H7.31567V15.2118H2.16167V1.60001H8.19987V5.95781H12.3155V9.65381H13.5155V4.92561L9.08807 0.399811L0.96167 0.400011ZM9.39987 2.43601L11.6741 4.75781H9.39987V2.43601Z\" fill=\"#F55F44\"/>\n  <path d=\"M3.3938 8.35242H10.604V9.55242H3.3938V8.35242Z\" fill=\"#F55F44\"/>\n  <path d=\"M3.3938 10.9524H7.004V12.1524H3.3938V10.9524Z\" fill=\"#F55F44\"/>\n  <path d=\"M17.0381 17.9422V12.4C17.0381 10.7719 13.1921 10.7258 12.7537 10.7258C12.3154 10.7258 8.47168 10.7758 8.47168 12.4V17.9796C8.47246 18.0406 8.48262 18.1007 8.50215 18.1577C8.84355 19.5601 12.3381 19.5999 12.7561 19.5999C13.1741 19.5999 16.9561 19.5523 17.0357 17.9741C17.0357 17.9656 17.0381 17.9562 17.0381 17.9421L17.0381 17.9422ZM15.8381 14.1422C15.5998 14.3618 14.4998 14.7203 12.7561 14.7203C11.0115 14.7203 9.92008 14.3617 9.67168 14.15V13.6344C10.8396 14.0602 12.4717 14.0782 12.7561 14.0782C13.0405 14.0782 14.6717 14.0578 15.8405 13.6344L15.8381 14.1422ZM9.67168 15.4758C10.8396 15.9016 12.4717 15.9196 12.7561 15.9196C13.0405 15.9196 14.6717 15.8993 15.8405 15.4758L15.8397 16C15.592 16.2118 14.4999 16.5704 12.7553 16.5704C11.0115 16.5704 9.9201 16.2 9.6717 16L9.67168 15.4758ZM12.7561 11.9298C14.2561 11.9298 15.2741 12.1954 15.6881 12.404C15.274 12.604 14.256 12.8783 12.7561 12.8783C11.2561 12.8783 10.2357 12.6142 9.82408 12.4001C10.2358 12.2001 11.2538 11.9298 12.7561 11.9298ZM9.67168 17.8344V17.318C10.8396 17.7438 12.4717 17.7618 12.7561 17.7618C13.0405 17.7618 14.6717 17.7415 15.8405 17.318V17.8336C15.5897 18.0461 14.4999 18.4 12.7561 18.4C11.0115 18.4 9.92008 18.0461 9.67168 17.8344Z\" fill=\"#F55F44\"/>\n  </svg>\n  \n      `,\n]\n\nexport const usersWithSavings = [\n  `<svg viewBox=\"0 0 16 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M15.6002 2.25C15.6002 1.52193 15.0002 0.934328 14.1059 0.534069C13.2049 0.130866 11.9713 -0.1 10.6248 -0.1C9.27858 -0.1 8.04511 0.130867 7.14429 0.534071C6.25004 0.93433 5.65 1.52193 5.65 2.25C5.65 2.97807 6.25004 3.56567 7.14429 3.96593C8.04511 4.36913 9.27858 4.6 10.6248 4.6C11.9713 4.6 13.2049 4.36913 14.1059 3.96593C15.0002 3.56567 15.6002 2.97807 15.6002 2.25ZM6.60024 2.25C6.60024 2.10802 6.68874 1.94724 6.88614 1.78025C7.08165 1.61485 7.37054 1.45542 7.7363 1.31648C8.46698 1.03894 9.48577 0.85024 10.6248 0.85024C11.7637 0.85024 12.7827 1.03894 13.5136 1.31649C13.8794 1.45543 14.1684 1.61487 14.364 1.78027C14.5615 1.94727 14.65 2.10804 14.65 2.25C14.65 2.39196 14.5615 2.55273 14.364 2.71974C14.1684 2.88513 13.8794 3.04457 13.5136 3.18351C12.7827 3.46106 11.7637 3.64976 10.6248 3.64976C9.48577 3.64976 8.46698 3.46106 7.7363 3.18351C7.37054 3.04457 7.08165 2.88514 6.88614 2.71975C6.68874 2.55275 6.60024 2.39198 6.60024 2.25Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M15.6002 2.25V2.15H15.5002H14.75H14.65V2.25V4.5C14.65 4.64197 14.5615 4.80274 14.364 4.96974C14.1684 5.13514 13.8794 5.29458 13.5136 5.43352C12.7827 5.71106 11.7637 5.89976 10.6248 5.89976C9.48577 5.89976 8.46698 5.71106 7.7363 5.43351C7.37054 5.29457 7.08165 5.13514 6.88614 4.96975C6.68874 4.80275 6.60024 4.64198 6.60024 4.5V2.25V2.15H6.50024H5.75H5.65V2.25V4.5C5.65 5.22807 6.25004 5.81567 7.14429 6.21593C8.04511 6.61913 9.27858 6.85 10.6248 6.85C11.9713 6.85 13.2049 6.61913 14.1059 6.21593C15.0002 5.81567 15.6002 5.22807 15.6002 4.5V2.25Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M5.65 6.75702V6.839L5.73039 6.85507L5.7304 6.85507L5.73836 6.85667L5.74649 6.85695C6.00336 6.866 6.2532 6.8848 6.49323 6.91193L6.62051 6.92632L6.60358 6.79935C6.60133 6.78244 6.60024 6.76647 6.60024 6.74998V4.49998V4.39998H6.50024H5.75H5.65V4.49998V6.74998V6.75702ZM9.50083 8.94542L9.50453 9.04459C9.86508 9.08079 10.2404 9.09994 10.6248 9.09994C11.9713 9.09994 13.2049 8.86907 14.1059 8.46587C15.0002 8.06561 15.6002 7.47801 15.6002 6.74994V4.49994V4.39994H15.5002H14.75H14.65V4.49994V6.74994C14.65 6.89191 14.5615 7.05268 14.364 7.21968C14.1684 7.38508 13.8794 7.54452 13.5136 7.68345C12.7827 7.961 11.7637 8.1497 10.6248 8.1497C10.2361 8.1497 9.8616 8.12811 9.50685 8.08776L9.37948 8.07328L9.39643 8.20034C9.39867 8.21716 9.39977 8.23384 9.39977 8.2497C9.39977 8.31385 9.40544 8.56946 9.41456 8.9475L9.50083 8.94542Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M9.47079 11.1524L9.30826 11.2762L9.56264 11.3004C9.90546 11.3331 10.2609 11.3501 10.6247 11.3501C11.9712 11.3501 13.2049 11.1192 14.1058 10.716C15.0001 10.3158 15.6002 9.72816 15.6002 9.00009V6.75009V6.65009H15.5002H14.7499H14.6499V6.75009V9.00009C14.6499 9.14206 14.5614 9.30283 14.3639 9.46984C14.1684 9.63523 13.8794 9.79467 13.5135 9.93361C12.7827 10.2112 11.7637 10.3999 10.6247 10.3999C10.257 10.3999 9.90052 10.3803 9.56311 10.3442L9.44952 10.332L9.45248 10.4462C9.45444 10.5218 9.4564 10.5983 9.45838 10.6757C9.46238 10.8316 9.46646 10.9908 9.47079 11.1524ZM6.60024 6.75006V6.65006H6.50024H5.75H5.65V6.75006V6.75709V6.85361L5.74646 6.85703C6.0019 6.86608 6.24972 6.88487 6.48926 6.91133L6.49603 6.85006H6.50024V6.81194H6.60024V6.75006Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M10.3502 9C10.3502 8.27193 9.75019 7.68433 8.85595 7.28407C7.95513 6.88087 6.72166 6.65 5.37548 6.65C4.02894 6.65 2.79529 6.88087 1.89438 7.28407C1.00005 7.68433 0.4 8.27193 0.4 9C0.4 9.72807 1.00005 10.3157 1.89438 10.7159C2.79529 11.1191 4.02894 11.35 5.37548 11.35C6.72166 11.35 7.95513 11.1191 8.85595 10.7159C9.75019 10.3157 10.3502 9.72807 10.3502 9ZM1.35024 9C1.35024 8.85803 1.43876 8.69726 1.63624 8.53026C1.83182 8.36486 2.1208 8.20542 2.48666 8.06648C3.21752 7.78894 4.23649 7.60024 5.37548 7.60024C6.51446 7.60024 7.53326 7.78894 8.26394 8.06649C8.6297 8.20543 8.91859 8.36486 9.1141 8.53025C9.3115 8.69725 9.4 8.85802 9.4 9C9.4 9.14198 9.3115 9.30275 9.1141 9.46975C8.91859 9.63514 8.6297 9.79457 8.26394 9.93351C7.53326 10.2111 6.51446 10.3998 5.37548 10.3998C4.23649 10.3998 3.21752 10.2111 2.48666 9.93351C2.1208 9.79457 1.83182 9.63513 1.63624 9.46974C1.43876 9.30273 1.35024 9.14196 1.35024 9Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M10.3502 9V8.9H10.2502H9.5H9.4V9V11.25C9.4 11.392 9.3115 11.5528 9.1141 11.7198C8.91859 11.8851 8.6297 12.0446 8.26394 12.1835C7.53326 12.4611 6.51447 12.6498 5.37548 12.6498C4.23649 12.6498 3.21752 12.4611 2.48666 12.1835C2.1208 12.0446 1.83182 11.8851 1.63624 11.7197C1.43876 11.5527 1.35024 11.392 1.35024 11.25V9V8.9H1.25024H0.5H0.4V9V11.25C0.4 11.9781 1.00005 12.5657 1.89438 12.9659C2.79529 13.3691 4.02894 13.6 5.37548 13.6C6.72166 13.6 7.95513 13.3691 8.85595 12.9659C9.75019 12.5657 10.3502 11.9781 10.3502 11.25V9Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M10.3502 11.25V11.15H10.2502H9.5H9.4V11.25V13.5C9.4 13.642 9.3115 13.8028 9.1141 13.9698C8.91859 14.1351 8.6297 14.2946 8.26394 14.4335C7.53326 14.7111 6.51447 14.8998 5.37548 14.8998C4.23649 14.8998 3.21752 14.7111 2.48666 14.4335C2.1208 14.2946 1.83182 14.1351 1.63624 13.9697C1.43876 13.8027 1.35024 13.642 1.35024 13.5V11.25V11.15H1.25024H0.5H0.4V11.25V13.5C0.4 14.2281 1.00005 14.8157 1.89438 15.2159C2.79529 15.6191 4.02894 15.85 5.37548 15.85C6.72166 15.85 7.95513 15.6191 8.85595 15.2159C9.75019 14.8157 10.3502 14.2281 10.3502 13.5V11.25Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M10.3502 13.5V13.4H10.2502H9.5H9.4V13.5V15.75C9.4 15.892 9.3115 16.0528 9.1141 16.2198C8.91859 16.3851 8.6297 16.5446 8.26394 16.6835C7.53326 16.9611 6.51447 17.1498 5.37548 17.1498C4.23649 17.1498 3.21752 16.9611 2.48666 16.6835C2.1208 16.5446 1.83182 16.3851 1.63624 16.2197C1.43876 16.0527 1.35024 15.892 1.35024 15.75V13.5V13.4H1.25024H0.5H0.4V13.5V15.75C0.4 16.4781 1.00005 17.0657 1.89438 17.4659C2.79529 17.8691 4.02894 18.1 5.37548 18.1C6.72166 18.1 7.95513 17.8691 8.85595 17.4659C9.75019 17.0657 10.3502 16.4781 10.3502 15.75V13.5Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M9.54008 13.4958L9.5636 13.5507L9.62306 13.556C9.94746 13.5851 10.2823 13.6 10.6248 13.6C11.9713 13.6 13.205 13.3692 14.1059 12.966C15.0002 12.5657 15.6003 11.9781 15.6003 11.25V9.00003V8.90003H15.5003H14.7501H14.6501V9.00003V11.25C14.6501 11.392 14.5615 11.5528 14.364 11.7198C14.1685 11.8852 13.8795 12.0446 13.5136 12.1835C12.7828 12.4611 11.7638 12.6498 10.6248 12.6498C10.278 12.6498 9.9424 12.6324 9.62225 12.6004L9.50957 12.5891L9.51233 12.7023C9.51648 12.8717 9.52093 13.0392 9.52528 13.203C9.52757 13.2894 9.52984 13.3748 9.53203 13.459L9.53252 13.4782L9.54008 13.4958L9.54008 13.4958Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    <path d=\"M9.59907 15.7457L9.62078 15.8065L9.68511 15.8117C9.98939 15.8365 10.3043 15.85 10.6249 15.85C11.9714 15.85 13.2051 15.6191 14.106 15.2159C15.0003 14.8157 15.6004 14.2281 15.6004 13.5V11.25V11.15H15.5004H14.7501H14.6501V11.25V13.5C14.6501 13.642 14.5616 13.8027 14.3641 13.9697C14.1685 14.1351 13.8796 14.2946 13.5137 14.4335C12.7829 14.7111 11.7639 14.8998 10.6249 14.8998C10.2997 14.8998 9.98427 14.8844 9.68226 14.8559L9.56982 14.8453L9.57289 14.9582C9.57804 15.1476 9.58236 15.3097 9.58576 15.4372C9.58931 15.5703 9.59185 15.6657 9.59328 15.7149L9.59375 15.7308L9.59907 15.7457L9.59907 15.7457Z\" fill=\"#FF3366\" stroke=\"#FF3366\" stroke-width=\"0.2\"/>\n    </svg>\n    `,\n]\n","export const verticalEllispsis = [\n  `<svg viewBox=\"0 0 4 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M2.00016 4.1111C2.92238 4.1111 3.66683 3.36666 3.66683 2.44444C3.66683 1.52222 2.92238 0.777771 2.00016 0.777771C1.07794 0.777771 0.333496 1.52222 0.333496 2.44444C0.333496 3.36666 1.07794 4.1111 2.00016 4.1111ZM2.00016 6.33333C1.07794 6.33333 0.333496 7.07777 0.333496 7.99999C0.333496 8.92221 1.07794 9.66666 2.00016 9.66666C2.92238 9.66666 3.66683 8.92221 3.66683 7.99999C3.66683 7.07777 2.92238 6.33333 2.00016 6.33333ZM2.00016 11.8889C1.07794 11.8889 0.333496 12.6333 0.333496 13.5555C0.333496 14.4778 1.07794 15.2222 2.00016 15.2222C2.92238 15.2222 3.66683 14.4778 3.66683 13.5555C3.66683 12.6333 2.92238 11.8889 2.00016 11.8889Z\" fill=\"#545F7D\"/>\n    </svg>\n    `,\n]\n","export const eye = [\n  `<svg viewBox=\"0 0 16 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M15.4533 5.44011L15.4519 5.43845C15.0398 4.92184 14.0948 3.82505 12.7977 2.85586C11.4993 1.88564 9.83832 1.03611 7.99968 1.03611C6.16104 1.03611 4.50011 1.88561 3.20166 2.85582C1.9029 3.82627 0.957157 4.92466 0.545819 5.44047C0.274826 5.76662 0.277249 6.2343 0.544833 6.57367L0.544827 6.57368L0.545641 6.57468C0.956296 7.08187 1.90229 8.17692 3.20172 9.14589C4.50012 10.1141 6.16105 10.9636 7.99968 10.9636C9.83832 10.9636 11.4993 10.1141 12.7977 9.1438C14.0966 8.17315 15.0424 7.07445 15.4537 6.55838C15.7074 6.2495 15.7071 5.74924 15.4533 5.44011ZM7.99968 9.75611C6.48691 9.75611 5.06807 9.02252 3.92942 8.17201C2.84501 7.36201 2.02502 6.4537 1.63351 5.9981C2.01625 5.53083 2.83628 4.6224 3.92306 3.81583C5.06351 2.96943 6.48657 2.24347 7.99968 2.24347C9.51274 2.24347 10.9317 2.96936 12.0701 3.81576C13.1557 4.62284 13.9761 5.53202 14.3662 5.99979C13.9762 6.46752 13.1557 7.3767 12.0701 8.18379C10.9317 9.0302 9.51274 9.75611 7.99968 9.75611Z\" fill=\"#545F7D\" stroke=\"#545F7D\" stroke-width=\"0.2\"/>\n    <path d=\"M8.00014 2.90818C6.29675 2.90818 4.9083 4.2967 4.9083 6.00002C4.9083 7.70334 6.29682 9.09186 8.00014 9.09186C9.70346 9.09186 11.092 7.70334 11.092 6.00002C11.092 4.29669 9.70346 2.90818 8.00014 2.90818ZM8.00014 7.88386C6.96726 7.88386 6.11646 7.0324 6.11646 6.00018C6.11646 4.96728 6.96732 4.1165 8.00014 4.1165C9.03296 4.1165 9.88382 4.96736 9.88382 6.00018C9.88382 7.033 9.03296 7.88386 8.00014 7.88386Z\" fill=\"#545F7D\" stroke=\"#545F7D\" stroke-width=\"0.2\"/>\n    </svg>\n    `,\n]\n","export const blacklistUser = [\n  `<svg viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M10.6974 5.68751L11.2446 6.23463C11.3484 6.33478 11.4072 6.47227 11.4085 6.61626C11.4099 6.76017 11.3528 6.8992 11.2507 7.00076M10.6974 5.68751L11.18 6.93001M10.6974 5.68751L11.2452 5.1397L11.2452 5.13971L11.2464 5.13854C11.4507 4.92746 11.4472 4.59222 11.2404 4.3848L11.2402 4.38457C11.0328 4.1778 10.6975 4.17427 10.4865 4.37863L10.4853 4.37976L9.9375 4.92757M10.6974 5.68751L9.9375 4.92757M11.2507 7.00076C11.2506 7.00082 11.2506 7.00089 11.2505 7.00095L11.18 6.93001M11.2507 7.00076C11.2508 7.00067 11.2509 7.00058 11.251 7.00049L11.18 6.93001M11.2507 7.00076C11.1491 7.10283 11.0101 7.15986 10.8663 7.15852C10.7223 7.15718 10.5848 7.09836 10.4846 6.99459M11.18 6.93001C11.0974 7.01313 10.9842 7.05962 10.8672 7.05853C10.7496 7.05743 10.6375 7.00931 10.556 6.92454M10.4846 6.99459L10.4853 6.99525L10.556 6.92454M10.4846 6.99459C10.4844 6.99434 10.4842 6.99409 10.4839 6.99385L10.556 6.92454M10.4846 6.99459L10.556 6.92454M9.9375 4.92757L9.38969 4.37976L9.38969 4.37975L9.38853 4.37863C9.17744 4.17426 8.84221 4.17782 8.63479 4.38457L8.63456 4.3848C8.42779 4.59222 8.42426 4.92746 8.62861 5.13854L8.6286 5.13855L8.62975 5.1397L9.17756 5.68751L9.9375 4.92757ZM5.08321 5.78713L5.08358 5.7875H5.125C5.84771 5.7875 6.54087 5.50023 7.05183 4.9893L6.98112 4.91859L7.05183 4.9893C7.56276 4.47837 7.85003 3.78519 7.85003 3.06247C7.85003 2.33974 7.56276 1.64659 7.05183 1.13564L6.98112 1.20635L7.05183 1.13564C6.5409 0.624706 5.84772 0.337439 5.125 0.337439C4.40227 0.337439 3.70913 0.624707 3.19817 1.13563L3.19817 1.13564C2.68724 1.64657 2.39997 2.33974 2.39997 3.06247L2.39997 3.06255C2.40054 3.78527 2.68838 4.47782 3.19867 4.9887L3.19875 4.98878C3.69979 5.48925 4.37558 5.77575 5.08321 5.78713ZM3.47503 3.06258C3.47606 2.15407 4.20964 1.41784 5.11715 1.4125H5.125C5.79221 1.4125 6.39395 1.81469 6.64919 2.43084L6.64921 2.43087C6.90495 3.04756 6.76367 3.7576 6.29189 4.22935L6.3626 4.30007L6.29189 4.22936C5.8201 4.70114 5.11009 4.84242 4.49341 4.58668L4.49337 4.58666C3.87725 4.33145 3.47507 3.72976 3.47503 3.06258ZM5.12495 6.52303L5.12487 6.4625C3.82254 6.46417 2.57375 6.98219 1.65273 7.90268L1.65269 7.90273C0.732181 8.82379 0.214215 10.0726 0.2125 11.3749V11.375V13.125C0.2125 13.2673 0.268864 13.4043 0.369758 13.5052L5.12495 6.52303ZM8.96249 12.5875H1.2875V11.375C1.2875 10.0041 2.01876 8.73726 3.20617 8.0519L3.2062 8.05189C4.39368 7.36594 5.85619 7.36594 7.04366 8.05189L7.04369 8.0519C8.23117 8.73731 8.96236 10.0043 8.96236 11.375L8.96249 12.5875ZM10.0082 6.37673L9.93749 6.30602L9.86678 6.37673L9.9375 6.44744L10.0082 6.37673Z\" fill=\"#545F7D\" stroke=\"#545F7D\" stroke-width=\"0.2\"/>\n    </svg>\n    `,\n]\n","export const activateUser = [\n  `<svg viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M4.98844 6.61042L4.9883 6.61032C4.16917 5.99661 3.6376 5.01997 3.6376 3.91777C3.6376 2.10402 5.07433 0.625678 6.87097 0.557898L6.87143 0.554956H6.99998C8.85641 0.554956 10.3613 2.06095 10.3613 3.91726C10.3613 5.01894 9.82975 5.99541 9.01128 6.60916C9.01126 6.60917 9.01124 6.60919 9.01122 6.60921L8.8311 6.74442L9.04517 6.81481C9.04518 6.81481 9.04519 6.81482 9.0452 6.81482C9.86977 7.08578 10.6377 7.52127 11.3015 8.10107L11.3015 8.10111C11.4683 8.24689 11.4846 8.49091 11.3393 8.65726L11.339 8.65759C11.1928 8.82395 10.9489 8.83881 10.7831 8.69395L10.8818 8.58099L10.7831 8.69395C9.77092 7.80959 8.48183 7.30916 7.13928 7.27625H7.12745L7.12248 7.27643C7.08099 7.27795 7.03809 7.27953 6.99838 7.27953C6.95946 7.27953 6.91838 7.27801 6.87793 7.27652L6.8704 7.27625H6.85909C4.2063 7.34106 1.91033 9.24287 1.36801 11.8468L1.36796 11.8471C1.32757 12.0393 1.37682 12.2406 1.50067 12.3934L1.5188 12.4157C1.60005 12.5064 1.7639 12.6326 2.00101 12.6326H6.51279C6.73367 12.6326 6.9067 12.8061 6.9067 13.027C6.9067 13.2492 6.733 13.4209 6.51279 13.4209H2.00101C1.56642 13.4209 1.16332 13.2288 0.889327 12.892L0.889302 12.892C0.613527 12.5528 0.507874 12.1163 0.597436 11.6872L4.98844 6.61042ZM4.98844 6.61042L5.16885 6.74525M4.98844 6.61042L5.16885 6.74525M7.86128 11.061L7.96602 10.9537L7.96608 10.9537C7.9661 10.9538 7.96613 10.9538 7.96615 10.9538L9.59842 12.5462L9.60673 12.5543L9.60695 12.5546C9.71302 12.6487 9.83815 12.6606 9.90482 12.6559L9.90539 12.6559C9.97132 12.6515 10.0909 12.6244 10.1837 12.5199L12.7175 8.98412L12.7176 8.98398C12.781 8.89585 12.8717 8.84017 12.9732 8.82387L13.0491 8.81167L13.0571 8.81973L9.94875 13.4437L9.95862 13.443C10.2896 13.4212 10.6004 13.2595 10.8092 13.0015L10.8046 13.0062L10.8029 13.0078L10.8019 13.0068M7.86128 11.061C7.76284 10.9648 7.613 10.967 7.51621 11.066C7.41996 11.1644 7.4216 11.3137 7.52003 11.4105L9.15523 13.0062C9.34992 13.1916 9.61133 13.295 9.8793 13.295C9.9061 13.295 9.92852 13.295 9.94711 13.2933M7.86128 11.061L9.49368 12.6535M7.86128 11.061L9.49368 12.6535M9.94711 13.2933V13.4433H9.94875V13.4436C9.95207 13.4434 9.95536 13.4432 9.95861 13.4429C9.95918 13.4428 9.95974 13.4428 9.9603 13.4427L9.95359 13.3667L9.94875 13.3119L9.94711 13.2933ZM9.94711 13.2933H9.94875C10.1958 13.277 10.4305 13.1713 10.6075 13.0001C10.6241 13.0151 10.6423 13.0284 10.6566 13.035C10.6809 13.041 10.7225 13.0417 10.7389 13.0388C10.7494 13.0359 10.7664 13.0294 10.773 13.0262C10.7855 13.0198 10.7941 13.0131 10.7972 13.0107C10.7989 13.0093 10.8005 13.008 10.8019 13.0068M10.8019 13.0068C10.8025 13.0063 10.8031 13.0057 10.8037 13.0053C10.8046 13.0044 10.8054 13.0037 10.806 13.0031C10.8084 13.0009 10.8104 12.9989 10.8118 12.9975C10.8124 12.9969 10.8128 12.9964 10.8132 12.9961L10.8146 12.9945L10.8152 12.9939L10.8159 12.9931L10.8169 12.9918L10.7443 12.9373L10.71 12.9116L10.6969 12.9018L10.7105 12.9154L10.7147 12.9196L10.8019 13.0068ZM9.49368 12.6535L9.49532 12.6557C9.64407 12.7957 9.8218 12.8121 9.91532 12.8056C10.0061 12.7996 10.1729 12.7624 10.3014 12.6131L9.49368 12.6535ZM5.16885 6.74525L4.95422 6.81591C4.95422 6.81591 4.95422 6.81591 4.95422 6.81591C4.19092 7.06717 3.47392 7.45838 2.84687 7.97401C1.69729 8.91932 0.899155 10.2389 0.59745 11.6872L5.16885 6.74525ZM4.42376 4.03523V3.91725C4.42376 2.50179 5.5796 1.34523 6.99471 1.34327L6.99471 1.34329H6.99881C8.41557 1.34329 9.57335 2.5001 9.57335 3.91727C9.57335 5.2906 8.48741 6.4205 7.12966 6.48821L7.12964 6.48794L7.12056 6.48895L7.11906 6.48911C7.07768 6.48803 7.03776 6.48748 6.99932 6.48748C6.97359 6.48748 6.94583 6.48798 6.91902 6.48847C6.90572 6.48871 6.89265 6.48895 6.88018 6.48912H6.87965L6.87807 6.48895L6.8781 6.48867L6.86894 6.48821C5.60286 6.42537 4.60496 5.42448 4.47602 4.16989L4.46218 4.03523H4.42376Z\" fill=\"#545F7D\" stroke=\"#545F7D\" stroke-width=\"0.3\"/>\n    </svg>\n    `,\n]\n","import React from 'react'\nimport { verticalEllispsis } from 'src/assets/icons/verticalEllipsis'\nimport { CDropdownItem } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { eye } from 'src/assets/icons/eye'\nimport { blacklistUser } from 'src/assets/icons/blacklist-user'\nimport { activateUser } from 'src/assets/icons/activateUser'\n\nconst CustomDropdown = React.lazy(() => import('src/components/dropdown/CustomDropdown'))\n\nconst _actionStructure = (data) => [\n  { icon: <CIcon icon={eye} className=\"me-3\" />, text: 'View Details', link: `#/users/${data.id}` },\n  {\n    icon: <CIcon icon={blacklistUser} className=\"me-3\" />,\n    text: 'Blacklist User',\n  },\n  {\n    icon: <CIcon icon={activateUser} className=\"me-3\" />,\n    text: 'Activate User',\n  },\n]\n\nfunction renderAction(data) {\n  const onRenderToggle = () => {\n    return (\n      <>\n        <CIcon icon={verticalEllispsis} className=\"w-auto\" />\n      </>\n    )\n  }\n\n  const onRenderMenu = () => {\n    return (\n      <>\n        {_actionStructure(data).map((item, idx) => {\n          return (\n            <CDropdownItem key={idx} href={item.link}>\n              {item.icon}\n              {item.text}\n            </CDropdownItem>\n          )\n        })}\n      </>\n    )\n  }\n  return (\n    <td>\n      <CustomDropdown onRenderToggle={onRenderToggle} onRenderMenu={onRenderMenu} />\n    </td>\n  )\n}\n\nexport const _structure = [\n  {\n    columnName: 'ORGANIZATION',\n    hasFilter: true,\n    path: 'orgName',\n    type: 'text',\n    screen: 'all',\n  },\n  {\n    columnName: 'USERNAME',\n    hasFilter: true,\n    path: 'userName',\n    type: 'text',\n    screen: 'all',\n  },\n  {\n    columnName: 'EMAIL',\n    hasFilter: true,\n    path: 'email',\n    type: 'text',\n    screen: 'md-sm',\n  },\n  {\n    columnName: 'PHONE NUMBER',\n    hasFilter: true,\n    path: 'phoneNumber',\n    type: 'text',\n    screen: 'md-sm',\n  },\n  {\n    columnName: 'DATE JOINED',\n    hasFilter: true,\n    renderer: (data) => data?.lastActiveDate?.split('T')[0],\n    type: 'text',\n    screen: 'md',\n  },\n  {\n    columnName: 'STATUS',\n    hasFilter: true,\n    type: 'badge',\n    renderer: (data) => <span className=\"active-badge\">Active</span>,\n    screen: 'md',\n  },\n  {\n    columnName: '',\n    hasFilter: false,\n    type: 'action',\n    renderAction: (data) => renderAction(data),\n    screen: '',\n  },\n]\n","import React, { useState, useEffect } from 'react'\nimport InfoCard from 'src/components/infographics/infoCard'\nimport { BaseTable } from 'src/components/table/BaseTable'\nimport { usersInfo } from './utils/_usersInfo'\nimport { _structure } from './utils/_tablestructure'\nimport { useAllUserData } from '../../hooks/useAllUserData'\nimport { usePaginateDate } from 'src/hooks/usePaginateData'\n\nconst ContentLayout = React.lazy(() => import('../../components/ContentLayout'))\n\nexport const Users = () => {\n  const [page, setPage] = useState(1)\n  const [usersData] = useAllUserData()\n  const [dataObject, getPageData] = usePaginateDate(usersData, 10)\n  const [tableData, setTableData] = useState([])\n\n  useEffect(() => {\n    setTableData(getPageData(page))\n  }, [dataObject, page, getPageData])\n\n  return (\n    <ContentLayout title=\"Users\" headerActionComponent={() => <></>}>\n      <div>\n        <section id=\"users-dashboard\" className=\"users-dashboard\">\n          {usersInfo.map((info, idx) => (\n            <InfoCard key={idx} icon={info.icon} subtitle={info.subtitle} title={info.title} />\n          ))}\n        </section>\n        <section id=\"users-table\" className=\"mt-3 users-table\">\n          <BaseTable\n            data={tableData}\n            structure={_structure}\n            onRenderActionPopover={() => {}}\n            page={page}\n            setPage={setPage}\n          />\n        </section>\n      </div>\n    </ContentLayout>\n  )\n}\n\nexport default Users\n","import { useState, useEffect, useCallback } from 'react'\nimport { getUser } from 'src/services/userService'\n\nexport const useAllUserData = () => {\n  const [usersData, setUsersData] = useState([])\n\n  const reloadData = useCallback(() => {\n    getUser()\n      .then((res) => {\n        setUsersData(res.data)\n        localStorage.setItem('lendsqr-data', JSON.stringify(res.data))\n      })\n      .catch((err) => {\n        // TODO: log error\n      })\n  }, [])\n\n  useEffect(() => {\n    const cachedData = localStorage.getItem('lendsqr-data')\n    if (cachedData) {\n      setUsersData(JSON.parse(cachedData))\n    } else {\n      reloadData()\n    }\n  }, [reloadData])\n\n  return [usersData, reloadData]\n}\n","import { useState, useEffect, useCallback } from 'react'\n\nexport const usePaginateDate = (data, pageSize) => {\n  const [dataObject, setDataObject] = useState({})\n\n  useEffect(() => {\n    let _length = data.length\n    let _division = Math.floor(_length / pageSize)\n    let _dataObject = {}\n    let _divisionPointer = 0\n\n    // Manually stratify mock data into pages\n    for (let i = 0; i < _division; i++) {\n      if (i === _division - 1) {\n        _dataObject[i + 1] = data.slice(_divisionPointer)\n      } else {\n        _dataObject[i + 1] = data.slice(_divisionPointer, _divisionPointer + pageSize)\n        _divisionPointer = _divisionPointer + pageSize\n      }\n    }\n    setDataObject(_dataObject)\n  }, [data, pageSize])\n\n  const getPageData = useCallback(\n    (page) => {\n      return dataObject[page] ?? []\n    },\n    [dataObject],\n  )\n\n  return [dataObject, getPageData]\n}\n","(function (root, factory) {\n  'use strict'\n\n  /*istanbul ignore next:cant test*/\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory()\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory)\n  } else {\n    // Browser globals\n    root.objectPath = factory()\n  }\n})(this, function () {\n  'use strict'\n\n  var toStr = Object.prototype.toString\n\n  function hasOwnProperty (obj, prop) {\n    if (obj == null) {\n      return false\n    }\n    //to handle objects with null prototypes (too edge case?)\n    return Object.prototype.hasOwnProperty.call(obj, prop)\n  }\n\n  function isEmpty (value) {\n    if (!value) {\n      return true\n    }\n    if (isArray(value) && value.length === 0) {\n      return true\n    } else if (typeof value !== 'string') {\n      for (var i in value) {\n        if (hasOwnProperty(value, i)) {\n          return false\n        }\n      }\n      return true\n    }\n    return false\n  }\n\n  function toString (type) {\n    return toStr.call(type)\n  }\n\n  function isObject (obj) {\n    return typeof obj === 'object' && toString(obj) === '[object Object]'\n  }\n\n  var isArray = Array.isArray || function (obj) {\n    /*istanbul ignore next:cant test*/\n    return toStr.call(obj) === '[object Array]'\n  }\n\n  function isBoolean (obj) {\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]'\n  }\n\n  function getKey (key) {\n    var intKey = parseInt(key)\n    if (intKey.toString() === key) {\n      return intKey\n    }\n    return key\n  }\n\n  function factory (options) {\n    options = options || {}\n\n    var objectPath = function (obj) {\n      return Object.keys(objectPath).reduce(function (proxy, prop) {\n        if (prop === 'create') {\n          return proxy\n        }\n\n        /*istanbul ignore else*/\n        if (typeof objectPath[prop] === 'function') {\n          proxy[prop] = objectPath[prop].bind(objectPath, obj)\n        }\n\n        return proxy\n      }, {})\n    }\n\n    var hasShallowProperty\n    if (options.includeInheritedProps) {\n      hasShallowProperty = function () {\n        return true\n      }\n    } else {\n      hasShallowProperty = function (obj, prop) {\n        return (typeof prop === 'number' && Array.isArray(obj)) || hasOwnProperty(obj, prop)\n      }\n    }\n\n    function getShallowProperty (obj, prop) {\n      if (hasShallowProperty(obj, prop)) {\n        return obj[prop]\n      }\n    }\n\n    var getShallowPropertySafely\n    if (options.includeInheritedProps) {\n      getShallowPropertySafely = function (obj, currentPath) {\n        if (typeof currentPath !== 'string' && typeof currentPath !== 'number') {\n          currentPath = String(currentPath)\n        }\n        var currentValue = getShallowProperty(obj, currentPath)\n        if (currentPath === '__proto__' || currentPath === 'prototype' ||\n          (currentPath === 'constructor' && typeof currentValue === 'function')) {\n          throw new Error('For security reasons, object\\'s magic properties cannot be set')\n        }\n        return currentValue\n      }\n    } else {\n      getShallowPropertySafely = function (obj, currentPath) {\n        return getShallowProperty(obj, currentPath)\n      }\n    }\n\n    function set (obj, path, value, doNotReplace) {\n      if (typeof path === 'number') {\n        path = [path]\n      }\n      if (!path || path.length === 0) {\n        return obj\n      }\n      if (typeof path === 'string') {\n        return set(obj, path.split('.').map(getKey), value, doNotReplace)\n      }\n      var currentPath = path[0]\n      var currentValue = getShallowPropertySafely(obj, currentPath)\n      if (path.length === 1) {\n        if (currentValue === void 0 || !doNotReplace) {\n          obj[currentPath] = value\n        }\n        return currentValue\n      }\n\n      if (currentValue === void 0) {\n        //check if we assume an array\n        if (typeof path[1] === 'number') {\n          obj[currentPath] = []\n        } else {\n          obj[currentPath] = {}\n        }\n      }\n\n      return set(obj[currentPath], path.slice(1), value, doNotReplace)\n    }\n\n    objectPath.has = function (obj, path) {\n      if (typeof path === 'number') {\n        path = [path]\n      } else if (typeof path === 'string') {\n        path = path.split('.')\n      }\n\n      if (!path || path.length === 0) {\n        return !!obj\n      }\n\n      for (var i = 0; i < path.length; i++) {\n        var j = getKey(path[i])\n\n        if ((typeof j === 'number' && isArray(obj) && j < obj.length) ||\n          (options.includeInheritedProps ? (j in Object(obj)) : hasOwnProperty(obj, j))) {\n          obj = obj[j]\n        } else {\n          return false\n        }\n      }\n\n      return true\n    }\n\n    objectPath.ensureExists = function (obj, path, value) {\n      return set(obj, path, value, true)\n    }\n\n    objectPath.set = function (obj, path, value, doNotReplace) {\n      return set(obj, path, value, doNotReplace)\n    }\n\n    objectPath.insert = function (obj, path, value, at) {\n      var arr = objectPath.get(obj, path)\n      at = ~~at\n      if (!isArray(arr)) {\n        arr = []\n        objectPath.set(obj, path, arr)\n      }\n      arr.splice(at, 0, value)\n    }\n\n    objectPath.empty = function (obj, path) {\n      if (isEmpty(path)) {\n        return void 0\n      }\n      if (obj == null) {\n        return void 0\n      }\n\n      var value, i\n      if (!(value = objectPath.get(obj, path))) {\n        return void 0\n      }\n\n      if (typeof value === 'string') {\n        return objectPath.set(obj, path, '')\n      } else if (isBoolean(value)) {\n        return objectPath.set(obj, path, false)\n      } else if (typeof value === 'number') {\n        return objectPath.set(obj, path, 0)\n      } else if (isArray(value)) {\n        value.length = 0\n      } else if (isObject(value)) {\n        for (i in value) {\n          if (hasShallowProperty(value, i)) {\n            delete value[i]\n          }\n        }\n      } else {\n        return objectPath.set(obj, path, null)\n      }\n    }\n\n    objectPath.push = function (obj, path /*, values */) {\n      var arr = objectPath.get(obj, path)\n      if (!isArray(arr)) {\n        arr = []\n        objectPath.set(obj, path, arr)\n      }\n\n      arr.push.apply(arr, Array.prototype.slice.call(arguments, 2))\n    }\n\n    objectPath.coalesce = function (obj, paths, defaultValue) {\n      var value\n\n      for (var i = 0, len = paths.length; i < len; i++) {\n        if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n          return value\n        }\n      }\n\n      return defaultValue\n    }\n\n    objectPath.get = function (obj, path, defaultValue) {\n      if (typeof path === 'number') {\n        path = [path]\n      }\n      if (!path || path.length === 0) {\n        return obj\n      }\n      if (obj == null) {\n        return defaultValue\n      }\n      if (typeof path === 'string') {\n        return objectPath.get(obj, path.split('.'), defaultValue)\n      }\n\n      var currentPath = getKey(path[0])\n      var nextObj = getShallowPropertySafely(obj, currentPath)\n      if (nextObj === void 0) {\n        return defaultValue\n      }\n\n      if (path.length === 1) {\n        return nextObj\n      }\n\n      return objectPath.get(obj[currentPath], path.slice(1), defaultValue)\n    }\n\n    objectPath.del = function del (obj, path) {\n      if (typeof path === 'number') {\n        path = [path]\n      }\n\n      if (obj == null) {\n        return obj\n      }\n\n      if (isEmpty(path)) {\n        return obj\n      }\n      if (typeof path === 'string') {\n        return objectPath.del(obj, path.split('.'))\n      }\n\n      var currentPath = getKey(path[0])\n      getShallowPropertySafely(obj, currentPath)\n      if (!hasShallowProperty(obj, currentPath)) {\n        return obj\n      }\n\n      if (path.length === 1) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1)\n        } else {\n          delete obj[currentPath]\n        }\n      } else {\n        return objectPath.del(obj[currentPath], path.slice(1))\n      }\n\n      return obj\n    }\n\n    return objectPath\n  }\n\n  var mod = factory()\n  mod.create = factory\n  mod.withInheritedProps = factory({includeInheritedProps: true})\n  return mod\n})\n"],"names":["getUser","Promise","resolve","reject","axios","then","res","status","data","catch","err","response","message","statusText","getUserById","id","userByID","icon","title","subtitle","className","filterIcon","TablePaginationGroup","React","BaseTable","structure","page","setPage","assignTableCellClass","cellInfo","screen","map","item","idx","scope","columnName","hasFilter","role","row","col","colIdx","type","value","path","objectPath","renderer","default","renderAction","renderCell","currentPage","onPageChange","pageValue","pageSize","totalCount","usersInfo","verticalEllispsis","eye","blacklistUser","activateUser","CustomDropdown","_actionStructure","text","link","_structure","lastActiveDate","split","onRenderToggle","onRenderMenu","href","ContentLayout","Users","useState","usersData","setUsersData","reloadData","useCallback","localStorage","setItem","JSON","stringify","useEffect","cachedData","getItem","parse","useAllUserData","dataObject","setDataObject","_length","length","_division","Math","floor","_dataObject","_divisionPointer","i","slice","getPageData","usePaginateDate","tableData","setTableData","headerActionComponent","info","onRenderActionPopover","root","factory","module","exports","define","this","toStr","Object","prototype","toString","hasOwnProperty","obj","prop","call","isEmpty","isArray","Array","getKey","key","intKey","parseInt","options","hasShallowProperty","getShallowPropertySafely","keys","reduce","proxy","bind","getShallowProperty","set","doNotReplace","currentPath","currentValue","includeInheritedProps","String","Error","has","j","ensureExists","insert","at","arr","get","splice","empty","isBoolean","isObject","push","apply","arguments","coalesce","paths","defaultValue","len","nextObj","del","mod","create","withInheritedProps"],"sourceRoot":""}