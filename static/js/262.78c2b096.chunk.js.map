{"version":3,"file":"static/js/262.78c2b096.chunk.js","mappings":"iPAAO,IAAMA,EAAY,CAAC,4VAObC,EAAa,CAAC,8VAOdC,EAAY,CAAC,4VAObC,EAAY,CAAC,2yB,+HCnBbC,EAAO,MAEdC,EAAQ,SAACC,EAAOC,GACpB,IAAIC,EAASD,EAAMD,EAAQ,EAC3B,OAAOG,MAAMC,KAAK,CAAEF,OAAAA,IAAU,SAACG,EAAGC,GAAJ,OAAYA,EAAMN,CAAlB,GAC/B,E,4CCAYO,EAAa,SAAC,GAOpB,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,WAKI,IAJJC,aAAAA,OAII,MAJW,EAIX,EAHJC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SAGMC,GADF,EADJC,UDJ2B,SAAC,GAA6D,IAA3DL,EAA0D,EAA1DA,WAAYG,EAA8C,EAA9CA,SAA8C,IAApCF,aAAAA,OAAoC,MAArB,EAAqB,EAAlBC,EAAkB,EAAlBA,YA0CtE,OAzCwBI,EAAAA,EAAAA,UAAQ,WAC9B,IAAMC,EAAiBC,KAAKC,KAAKT,EAAaG,GAM9C,GAHyBF,EAAe,GAGhBM,EACtB,OAAOjB,EAAM,EAAGiB,GAGlB,IAAMG,EAAmBF,KAAKG,IAAIT,EAAcD,EAAc,GACxDW,EAAoBJ,KAAKK,IAAIX,EAAcD,EAAcM,GAIzDO,EAAqBJ,EAAmB,EACxCK,EAAsBH,EAAoBL,EAAiB,EAE3DS,EAAiB,EACjBC,EAAgBV,EAEtB,IAAKO,GAAsBC,EAAqB,CAC9C,IACIG,EAAY5B,EAAM,EADF,EAAI,EAAIW,GAG5B,MAAM,GAAN,eAAWiB,GAAX,CAAsB7B,EAAMkB,GAC7B,CAED,GAAIO,IAAuBC,EAAqB,CAC9C,IACII,EAAa7B,EAAMiB,GADF,EAAI,EAAIN,GAC4B,EAAGM,GAC5D,MAAM,CAAES,EAAgB3B,GAAxB,eAAiC8B,GAClC,CAED,GAAIL,GAAsBC,EAAqB,CAC7C,IAAIK,EAAc9B,EAAMoB,EAAkBE,GAC1C,MAAM,CAAEI,EAAgB3B,GAAxB,eAAiC+B,GAAjC,CAA8C/B,EAAM4B,GACrD,CACF,GAAE,CAACjB,EAAYG,EAAUF,EAAcC,GAGzC,CCrCyBmB,CAAc,CACpCnB,YAAAA,EACAF,WAAAA,EACAC,aAAAA,EACAE,SAAAA,KAGF,GAAoB,IAAhBD,GAAqBE,EAAgBX,OAAS,EAChD,OAAO,KAWT,OACE,UAAC,KAAD,CAAa,aAAW,mBAAxB,WACE,SAAC,KAAD,CACE6B,SAAUpB,GAAe,EACzB,aAAW,WACXqB,QATa,WACjBxB,EAAaG,EAAc,EAC5B,EAQKsB,KAAK,SAJP,UAME,SAAC,IAAD,CAAOC,KAAMvC,EAAAA,OAGdkB,EAAgBsB,KAAI,SAACC,EAAY9B,GAChC,OAAI8B,IAAetC,GACV,SAAC,KAAD,oBAAsBQ,IAI7B,SAAC,KAAD,CACE2B,KAAK,SACLI,OAAQD,IAAezB,EAEvBqB,QAAS,kBAAMxB,EAAa4B,EAAnB,EAJX,SAMGA,GAHI9B,EAMV,KAED,SAAC,KAAD,CAAiByB,SAAUpB,GAAeC,EAAUoB,QApCzC,WACbxB,EAAaG,EAAc,EAC5B,EAkCwEsB,KAAK,SAA1E,UACE,SAAC,IAAD,CAAOC,KAAMxC,EAAAA,SAIpB,EAWD,G","sources":["assets/icons/arrows.js","hooks/usePagination.js","components/pagination/Pagination.js"],"sourcesContent":["export const arrowLeft = [\n  `<svg viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0.993905 1.94274C0.152813 1.10165 1.45656 -0.159498 2.255 0.68165L7.00576 5.43241C7.38419 5.76873 7.38419 6.35718 7.00576 6.6935L2.38142 11.36C1.54033 12.159 0.279177 10.8973 1.12033 10.0568L5.1141 6.063L0.993905 1.94274Z\" fill=\"#213F7D\"/>\n    </svg>\n    `,\n]\n\nexport const arrowRight = [\n  `<svg viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M7.00609 10.0573C7.84719 10.8984 6.54344 12.1595 5.745 11.3184L0.994244 6.56759C0.61581 6.23127 0.61581 5.64282 0.994244 5.3065L5.61858 0.640017C6.45967 -0.158963 7.72082 1.10267 6.87967 1.94322L2.8859 5.937L7.00609 10.0573Z\" fill=\"#213F7D\"/>\n    </svg>\n    `,\n]\n\nexport const arrowDown = [\n  `<svg viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M10.0571 0.993783C10.8982 0.152691 12.1594 1.45644 11.3182 2.25487L6.56747 7.00563C6.23115 7.38407 5.6427 7.38407 5.30638 7.00563L0.639894 2.38129C-0.159086 1.5402 1.10255 0.279055 1.9431 1.1202L5.93688 5.11398L10.0571 0.993783Z\" fill=\"#213F7D\"/>\n  </svg>\n  `,\n]\n\nexport const backArrow = [\n  `<svg viewBox=\"0 0 28 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0.94997 5.35639C0.994502 5.47123 1.0613 5.5767 1.14684 5.66575L4.89684 9.41575C5.07263 9.5927 5.31285 9.69348 5.56248 9.69348C5.81211 9.69348 6.05232 9.5927 6.22812 9.41575C6.40508 9.23997 6.50586 8.99974 6.50586 8.75011C6.50586 8.50048 6.40508 8.26027 6.22812 8.08447L4.07187 5.93761H26.6562C27.1742 5.93761 27.5937 5.51809 27.5937 5.00011C27.5937 4.48213 27.1742 4.06261 26.6562 4.06261H4.07187L6.22812 1.91575C6.5961 1.54777 6.5961 0.952482 6.22812 0.584502C5.86014 0.216522 5.26485 0.216522 4.89687 0.584502L1.14687 4.3345C1.06133 4.42356 0.994532 4.52903 0.95 4.64386C0.901952 4.75636 0.876173 4.87706 0.875 5.00011C0.876172 5.12316 0.901953 5.24386 0.95 5.35636L0.94997 5.35639Z\" fill=\"#545F7D\"/>\n    </svg>\n    `,\n]\n","import { useMemo } from 'react'\n\nexport const DOTS = '...'\n\nconst range = (start, end) => {\n  let length = end - start + 1\n  return Array.from({ length }, (_, idx) => idx + start)\n}\n\nexport const usePagination = ({ totalCount, pageSize, siblingCount = 1, currentPage }) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize)\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5\n\n    // Show range [1..totalPageCount] when number of pages is less than the page number\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount)\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1)\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPageCount)\n\n    // Do not show dots if there is only one position left.\n\n    const shouldShowLeftDots = leftSiblingIndex > 2\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2\n\n    const firstPageIndex = 1\n    const lastPageIndex = totalPageCount\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount\n      let leftRange = range(1, leftItemCount)\n\n      return [...leftRange, DOTS, totalPageCount]\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount\n      let rightRange = range(totalPageCount - rightItemCount + 1, totalPageCount)\n      return [firstPageIndex, DOTS, ...rightRange]\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex)\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex]\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage])\n\n  return paginationRange\n}\n","import React from 'react'\nimport { usePagination, DOTS } from '../../hooks/usePagination'\nimport PropTypes from 'prop-types'\nimport { CPagination, CPaginationItem } from '@coreui/react'\nimport { arrowLeft, arrowRight } from 'src/assets/icons/arrows'\nimport CIcon from '@coreui/icons-react'\n\nexport const Pagination = ({\n  onPageChange,\n  totalCount,\n  siblingCount = 1,\n  currentPage,\n  pageSize,\n  className,\n}) => {\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  })\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1)\n  }\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1)\n  }\n\n  return (\n    <CPagination aria-label=\"Table pagination\">\n      <CPaginationItem\n        disabled={currentPage <= 1}\n        aria-label=\"Previous\"\n        onClick={onPrevious}\n        role=\"button\"\n      >\n        <CIcon icon={arrowRight} />\n      </CPaginationItem>\n\n      {paginationRange.map((pageNumber, idx) => {\n        if (pageNumber === DOTS) {\n          return <CPaginationItem key={idx}>&#8230;</CPaginationItem>\n        }\n\n        return (\n          <CPaginationItem\n            role=\"button\"\n            active={pageNumber === currentPage}\n            key={idx}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </CPaginationItem>\n        )\n      })}\n\n      <CPaginationItem disabled={currentPage >= pageSize} onClick={onNext} role=\"button\">\n        <CIcon icon={arrowLeft} />\n      </CPaginationItem>\n    </CPagination>\n  )\n}\n\nPagination.propTypes = {\n  onPageChange: PropTypes.func,\n  totalCount: PropTypes.number,\n  siblingCount: PropTypes.number,\n  currentPage: PropTypes.number,\n  pageSize: PropTypes.number,\n  className: PropTypes.string,\n}\n\nexport default Pagination\n"],"names":["arrowLeft","arrowRight","arrowDown","backArrow","DOTS","range","start","end","length","Array","from","_","idx","Pagination","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","className","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","disabled","onClick","role","icon","map","pageNumber","active"],"sourceRoot":""}